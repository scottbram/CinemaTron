var sitewide="object"==typeof sitewide?sitewide:{};(sitewide={init:()=>{sitewide.track_changes_auth(),$("#auth_pw_set, #auth_login").on("submit",function(e){if(e.preventDefault(),""!==$.trim($(this).find("input[type=email]").val())&&""!==$.trim($(this).find("input[type=password]").val())){console.log("submit");let e=$(this).attr("id");sitewide.auth_do(e)}else console.log("not so submit...")}),window.setTimeout(function(){$("body").css("visibility","visible")},200)},track_changes_auth:()=>{$("body").on("input change",".auth_form input",function(e){var o=$(this)[0],t=$(this).val(),s=$(this).closest("form"),n=(s.attr("id"),!1),l=!1;if(o.setCustomValidity(""),"email"===$(this).attr("type")){let{valid_eml:e}=utils.validate_email(t);e?o.setCustomValidity(""):o.setCustomValidity("Gonna need a valid email there, chief.")}if("password"===$(this).attr("type")){let{valid_pw:e,valid_pw_length:n,valid_pw_length_msg:l,valid_cases:i,valid_cases_msg:a,valid_pw_spcChar:r,valid_pw_spcChar_msg:c}=utils.validate_pw(t);console.log("valid_pw: "),console.log(e),e&&o.setCustomValidity("");let d="";n?$(s).find("#auth_pw_set_hint_minLength").removeClass("invalid").addClass("valid"):($(s).find("#auth_pw_set_hint_minLength").removeClass("valid").addClass("invalid"),d+=l),i?$(s).find("#auth_pw_set_hint_cases").removeClass("invalid").addClass("valid"):($(s).find("#auth_pw_set_hint_cases").removeClass("valid").addClass("invalid"),d+=a),r?$(s).find("#auth_pw_set_hint_spcChar").removeClass("invalid").addClass("valid"):($(s).find("#auth_pw_set_hint_spcChar").removeClass("valid").addClass("invalid"),d+=c),o.setCustomValidity(d)}o.checkValidity()?console.log("Fld is valid!"):(console.log("Fld invalid. fld_el.validationMessage: "),console.log(o.validationMessage)),""!==$.trim(s.find("input[type=email]").val())&&""!==$.trim(s.find("input[type=password]").val())&&(n=!0),s.find("input[type=email]").is(":valid")&&s.find("input[type=password]").is(":valid")&&(l=!0),n&&l?(!0,s.find("button[type=submit]").attr("disabled",!1)):(!1,s.find("button[type=submit]").attr("disabled",!0))})},auth_do:e=>{var o;switch(e){case"auth_pw_set":o="pw_set";break;case"auth_login":o="login"}var t={auth_task:o};$.each($("#"+e+" input"),function(e,o){var s=$(o).attr("data-authfld"),n=$(o).val();t[s]=n}),console.log(t);var s=JSON.stringify(t);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:s,success:function(e,o,t){console.log("success event"),console.log("resp: "),console.log(e)},error:function(e,o,t){var s;if(console.log("error event"),console.log("jqXHR: "),console.log(e),console.log("textStatus: "),console.log(o),console.log("errorThrown: "),console.log(t),void 0!==e.responseJSON){s=e.responseJSON.statusCode+"\n"+e.responseJSON.error+"\n"+e.responseJSON.message}else s=e.responseText;alert("Error:\n"+s)},complete:function(){console.log("complete event")}})},auth_pw_set_do:()=>{var e={task:"pw_set"};$.each($("#auth_pw_set input"),function(o,t){var s=$(t).attr("id"),n=$(t).val();e[s]=n}),console.log(e);var o=JSON.stringify(e);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:o,success:function(e,o,t){console.log("success event"),console.log("resp: "),console.log(e)},error:function(e,o,t){var s;if(console.log("error event"),console.log("jqXHR: "),console.log(e),console.log("textStatus: "),console.log(o),console.log("errorThrown: "),console.log(t),void 0!==e.responseJSON){s=e.responseJSON.statusCode+"\n"+e.responseJSON.error+"\n"+e.responseJSON.message}else s=e.responseText;alert("Error:\n"+s)},complete:function(){console.log("complete event")}})},auth_login_do:()=>{var e={task:"login"};$.each($("#auth_login input"),function(o,t){var s=$(t).attr("id"),n=$(t).val();e[s]=n}),console.log(e);var o=JSON.stringify(e);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:o,success:function(e,o,t){console.log("success event"),console.log("resp: "),console.log(e)},error:function(e,o,t){var s;if(console.log("error event"),console.log("jqXHR: "),console.log(e),console.log("textStatus: "),console.log(o),console.log("errorThrown: "),console.log(t),void 0!==e.responseJSON){s=e.responseJSON.statusCode+"\n"+e.responseJSON.error+"\n"+e.responseJSON.message}else s=e.responseText;alert("Error:\n"+s)},complete:function(){console.log("complete event")}})}}).init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
