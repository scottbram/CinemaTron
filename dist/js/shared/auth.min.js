var auth="object"==typeof auth?auth:{};(auth={init:()=>{},sesh_check:()=>new Promise((o,e)=>{$.ajax({url:"/.netlify/functions/at_auth",dataType:"json"}).done(function(e,l,t){e.length>0&&o(e)}).fail(function(o,l,t){e(o,l,t)})}),input_validation:()=>{$("body").on("input change",".auth_form input",function(o){var e=$(this)[0],l=$(this).val(),t=$(this).closest("form"),n=(t.attr("id"),!1),s=!1;if(e.setCustomValidity(""),"email"===$(this).attr("type")){let{valid_eml:o}=utils.validate_email(l);o?e.setCustomValidity(""):e.setCustomValidity("Gonna need a valid email there, chief.")}if("password"===$(this).attr("type")){let{valid_pw:o,valid_pw_length:n,valid_pw_length_msg:s,valid_ltrCases:a,valid_ltrCases_msg:i,valid_pw_spcChar:r,valid_pw_spcChar_msg:c}=utils.validate_pw(l);o&&e.setCustomValidity("");let d="";n?$(t).find(".validHelp_minLength").removeClass("invalid").addClass("valid"):($(t).find(".validHelp_minLength").removeClass("valid").addClass("invalid"),d+=s),a?$(t).find(".validHelp_ltrCases").removeClass("invalid").addClass("valid"):($(t).find(".validHelp_ltrCases").removeClass("valid").addClass("invalid"),d+=i),r?$(t).find(".validHelp_spcChar").removeClass("invalid").addClass("valid"):($(t).find(".validHelp_spcChar").removeClass("valid").addClass("invalid"),d+=c),e.setCustomValidity(d)}e.checkValidity()||(console.log("Fld invalid. fld_el.validationMessage: "),console.log(e.validationMessage)),""!==$.trim(t.find("input[type=email]").val())&&""!==$.trim(t.find("input[type=password]").val())&&(n=!0),t.find("input[type=email]").is(":valid")&&t.find("input[type=password]").is(":valid")&&(s=!0),n&&s?(!0,$("#auth_login_do").attr("disabled",!1)):(!1,$("#auth_login_do").attr("disabled",!0))})},show_login_modal:()=>{$.get("components/_auth_login.html",function(o){$("body").append(o),$("#auth_login_modal").on("show.bs.modal",function(o){auth.input_validation(),$("#auth_login input").off("keypress"),$("#auth_login input").keypress(function(o){13===o.which&&($("#auth_login_do").attr("disabled",!0),auth.login_do())}),$("#auth_login_do").off("click"),$("#auth_login_do").on("click",function(o){o.preventDefault(),$("#auth_login_do").attr("disabled",!0),auth.login_do()})}),$("#auth_login_modal").modal("show")})},auth_do:o=>{var e;switch(console.log(l),o){case"auth_pw_set":e="auth_pw_set";break;case"auth_login":e="auth_login"}var l={auth_task:e};$.each($("#"+o+" input"),function(o,e){var t=$(e).attr("data-authfld"),n=$(e).val();l[t]=n}),console.log(l);var t=JSON.stringify(l);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:t,success:function(o,e,l){console.log("success event"),console.log("resp: "),console.log(o),window.location.reload(!0)},error:function(o,e,l){var t;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(l),void 0!==o.responseJSON){let e=o.responseJSON.statusCode;t=e+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message,401===e&&console.log("Communicate the specific authentication problem to user")}else t=o.responseText;console.error("Error:\n"+t)},complete:function(){console.log("complete event")}})},pw_set_do:()=>{var o={task:"pw_set"};$.each($("#auth_pw_set input"),function(e,l){var t=$(l).attr("id"),n=$(l).val();o[t]=n}),console.log(o);var e=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:e,success:function(o,e,l){console.log("success event"),console.log("resp: "),console.log(o)},error:function(o,e,l){var t;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(l),void 0!==o.responseJSON){t=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else t=o.responseText;alert("Error:\n"+t)},complete:function(){console.log("complete event")}})},login_do:()=>{console.log("login_do");var o={auth_task:"auth_login"};$.each($("#auth_login input"),function(e,l){var t=$(l).attr("data-authfld"),n=$(l).val();o[t]=n}),console.log("req_obj: "),console.log(o);var e=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:e,success:function(o,e,l){console.log("success event"),console.log("resp: "),console.log(o),auth.login_success(o)},error:function(o,e,l){var t;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(l),void 0!==o.responseJSON){t=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else t=o.responseText;alert("Error:\n"+t)},complete:function(){console.log("complete event")}})},login_success:o=>{location.reload()}}).init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
