var auth="object"==typeof auth?auth:{};auth={sesh_check:()=>new Promise((o,t)=>{$.ajax({url:"/.netlify/functions/at_auth",dataType:"json"}).done(t=>{t.length>0&&o(t)}).fail((o,e,l)=>{t(o,e,l)})}),input_validation:()=>{$("body").on("input",".auth_form input",function(){var o=$(this)[0],t=$(this).val(),e=$(this).closest("form"),l=e.attr("id"),a=!1,n=!1;if(o.setCustomValidity(""),"email"===$(this).attr("type")){let{valid_eml:e}=utils.validate_email(t);e?o.setCustomValidity(""):o.setCustomValidity("Please check that the email is correct.")}if("password"===$(this).attr("type")){let{valid_pw:l,valid_pw_length:a,valid_pw_length_msg:n,valid_ltrCases:s,valid_ltrCases_msg:i,valid_pw_spcChar:r,valid_pw_spcChar_msg:c}=utils.validate_pw(t);l&&o.setCustomValidity("");let d="";a?$(e).find(".validHelp_minLength").removeClass("invalid").addClass("valid"):($(e).find(".validHelp_minLength").removeClass("valid").addClass("invalid"),d+=n),s?$(e).find(".validHelp_ltrCases").removeClass("invalid").addClass("valid"):($(e).find(".validHelp_ltrCases").removeClass("valid").addClass("invalid"),d+=i),r?$(e).find(".validHelp_spcChar").removeClass("invalid").addClass("valid"):($(e).find(".validHelp_spcChar").removeClass("valid").addClass("invalid"),d+=c),o.setCustomValidity(d)}if("auth_pw_set_pw_retype"===$(this).attr("id")){if($("#auth_pw_set_pw").val()!==$(this).val()){let t="Doesn't match new password!";$(this).attr("title","Doesn't match new password!"),$(this).attr("data-toggle","tooltip"),$(this).attr("data-placement","top"),$(this).tooltip("show"),o.setCustomValidity(t)}else o.setCustomValidity(""),$(this).attr("title",""),$(this).tooltip("hide")}o.checkValidity();""!==$.trim(e.find("input[type=email]").val())&&""!==$.trim(e.find("input[type=password]").val())&&(a=!0);let s=document.getElementById(l).getElementsByTagName("input");(s=[...s]).forEach(o=>{let t=o.getAttribute("type");if("email"===t||"password"===t){if(!o.checkValidity())return;n=!0}}),a&&n?(!0,$("#auth_login_do").prop("disabled",!1)):(!1,$("#auth_login_do").prop("disabled",!0))})},login_btn_init:()=>{$(".auth-loginout, #log_in_prompt").click(()=>{auth.show_login_modal("toggle")})},login_modal_init:()=>{auth.login_btn_init(),auth.show_login_modal()},show_login_modal:()=>{function o(){$("#auth_login_actions_msgs").empty(),$("#auth_login_do").prop("disabled",!0),$("#auth_login input").prop("disabled",!0),$("#auth_login_modal .modal-body").prepend('<div class="overlay overlay-enlighten" aria-hidden="true"></div>'),$("#auth_login_modal .overlay").prepend('<span class="spinner spinner-border spinner-border-md" role="status" aria-hidden="true"></span>'),auth.login_do()}$.get("components/_auth_login.html",function(t){$("body").append(t),$("#auth_login_modal").on("show.bs.modal",function(){auth.input_validation(),setTimeout(function(){$(".auth_form input").trigger("input")},500),$("#auth_login input").off("keyup"),$("#auth_login input").keyup(function(t){var e=!0;let l=document.getElementById("auth_login").getElementsByTagName("input");(l=[...l]).forEach(o=>{o.checkValidity()||(e=!1)}),console.log(`e.which === 13: ${13===t.which}`),console.log(`allFldsValid: ${e}`),13===t.which&&e&&(console.log("enter"),o())}),$("#auth_login_do").off("click"),$("#auth_login_do").on("click",function(){o()})}),$("#auth_login_modal").on("shown.bs.modal",function(){""===$.trim($("#auth_login").find("input[type=email]").val())&&""===$.trim($("#auth_login").find("input[type=password]").val())&&$("#auth_login_email").focus()}),$("#auth_login_modal").on("hidden.bs.modal",function(){$("#auth_login_modal").modal("dispose"),$("#auth_login_modal").remove()}),$("#auth_login_modal").modal({backdrop:"static"}),$("#auth_login_modal").modal("show")})},auth_do:o=>{var t;switch(console.log(e),o){case"auth_pw_set":t="auth_pw_set";break;case"auth_login":t="auth_login"}var e={auth_task:t};$.each($("#"+o+" input"),function(o,t){var l=$(t).attr("data-authfld"),a=$(t).val();e[l]=a}),console.log(e);var l=JSON.stringify(e);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:l,success:function(){window.location.reload(!0)},error:function(o,t,e){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(t),console.log("errorThrown: "),console.log(e),void 0!==o.responseJSON){let t=o.responseJSON.statusCode;l=t+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message,401===t&&console.log("Communicate the specific authentication problem to user")}else l=o.responseText;console.error("Error:\n"+l)},complete:function(){console.log("complete event")}})},pw_set_do:()=>{var o={task:"pw_set"};$.each($("#auth_pw_set input"),function(t,e){var l=$(e).attr("id"),a=$(e).val();o[l]=a}),console.log(o);var t=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:t,success:function(o,t,e){console.log("success event"),console.log("resp: "),console.log(o),console.log("textStatus: "),console.log(t),console.log("jqXhr: "),console.log(e)},error:function(o,t,e){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(t),console.log("errorThrown: "),console.log(e),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;console.error("Error:\n"+l)},complete:function(){console.log("complete event")}})},login_do:()=>{var o={auth_task:"auth_login"};$.each($("#auth_login input"),function(t,e){var l=$(e).attr("data-authfld"),a=$(e).val();o[l]=a});var t=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:t,success:function(o){console.log("success event"),auth.login_success(o)},error:function(o,t,e){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(t),console.log("errorThrown: "),console.log(e),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;console.error("Error:\n"+l),$("#auth_login_actions_msgs").prepend('<span class="msg_loginStatus msg-warning">Please check that the login info is correct</span>'),$("#auth_login_actions_msgs").show(),$("#auth_login_do").prop("disabled",!1),$("#auth_login input").prop("disabled",!1),$("#auth_login_modal .modal-body .overlay").remove()},complete:function(){console.log("complete event")}})},login_success:()=>{if(0===$(".valChg").length)location.reload();else{var o=$(".save:disabled");$.each(o,function(){$(this).is(":visible")&&$(this).prop("disabled",!1)}),$("#auth_login_modal").modal("hide")}},logout_init:()=>{$(".auth-loginout").text("Log out"),$(".auth-loginout").removeClass("disabled"),$(".auth-loginout").removeAttr("tabindex"),$(".auth-loginout").removeAttr("aria-disabled"),$(".auth-loginout").click(function(){auth.logout_do()})},logout_do:()=>{$.ajax({url:"/.netlify/functions/at_auth?auth_task=logout",type:"GET",success:function(o){auth.logout_success()},error:function(o,t,e){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(t),console.log("errorThrown: "),console.log(e),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;console.error("Error:\n"+l)},complete:function(){console.log("complete event")}})},logout_success:()=>{location.reload()}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
