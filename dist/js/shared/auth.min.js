var auth="object"==typeof auth?auth:{};auth={sesh_check:()=>new Promise((o,e)=>{$.ajax({url:"/.netlify/functions/at_auth",dataType:"json"}).done(e=>{e.length>0&&o(e)}).fail((o,t,l)=>{e(o,t,l)})}),input_validation:()=>{$("body").on("input",".auth_form input",function(){var o=$(this)[0],e=$(o).attr("id"),t=$(this).val(),l=$(this).closest("form"),a=l.attr("id"),s=!1,n=!1;if(o.setCustomValidity(""),"email"===$(this).attr("type")){let{valid_eml:e}=utils.validate_email(t);e?o.setCustomValidity(""):o.setCustomValidity("Please check that the email is correct.")}if("password"===$(this).attr("type")&&"acct_main_mgmt_pw_retype"!==$(this).attr("id")){let{valid_pw:a,valid_pw_length:s,valid_pw_length_msg:n,valid_ltrCases_upper:i,valid_ltrCases_upper_msg:r,valid_ltrCases_lower:d,valid_ltrCases_lower_msg:c,valid_number:u,valid_number_msg:_,valid_pw_spcChar:p,valid_pw_spcChar_msg:g}=utils.validate_pw(t);a&&o.setCustomValidity("");let h="";s?$(l).find(".validHelp_minLength").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_minLength").removeClass("valid").addClass("invalid"),h+=n),i?$(l).find(".validHelp_ltrCases_upper").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_ltrCases_upper").removeClass("valid").addClass("invalid"),h+=r),d?$(l).find(".validHelp_ltrCases_lower").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_ltrCases_lower").removeClass("valid").addClass("invalid"),h+=c),u?$(l).find(".validHelp_number").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_number").removeClass("valid").addClass("invalid"),h+=_),p?$(l).find(".validHelp_spcChar").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_spcChar").removeClass("valid").addClass("invalid"),h+=g),o.setCustomValidity(h),"acct_main_mgmt_pw"===e&&""===h?$("#acct_save_do").prop("disabled",!1):$("#acct_save_do").prop("disabled",!0)}if("acct_main_mgmt_pw_retype"===$(this).attr("id")){if($("#acct_main_mgmt_pw").val()!==$(this).val()){$("#acct_save_do").prop("disabled",!0);let e="Doesn't match new password!";$(this).attr("title","Doesn't match new password!"),$(this).attr("data-toggle","tooltip"),$(this).attr("data-placement","top"),$(this).tooltip("show"),o.setCustomValidity(e)}else $("#acct_save_do").prop("disabled",!1),o.setCustomValidity(""),$(this).attr("title",""),$(this).tooltip("hide")}o.checkValidity();""!==$.trim(l.find("input[type=email]").val())&&""!==$.trim(l.find("input[type=password]").val())&&(s=!0);let i=document.getElementById(a).getElementsByTagName("input");(i=[...i]).forEach(o=>{let e=o.getAttribute("type");if("email"===e||"password"===e){if(!o.checkValidity())return;n=!0}}),s&&n?(!0,$("#auth_login_do").prop("disabled",!1)):(!1,$("#auth_login_do").prop("disabled",!0))})},login_btn_init:()=>{$(".auth-loginout, #log_in_prompt").click(()=>{auth.show_login_modal("toggle")})},login_modal_init:()=>{auth.login_btn_init(),auth.show_login_modal()},show_login_modal:()=>{function o(){$("#auth_login_actions_msgs").empty(),$("#auth_login_do").prop("disabled",!0),$("#auth_login input").prop("disabled",!0),$("#auth_login_modal .modal-body").prepend('<div class="overlay overlay-enlighten" aria-hidden="true"></div>'),$("#auth_login_modal .overlay").prepend('<span class="spinner spinner-border spinner-border-md" role="status" aria-hidden="true"></span>'),auth.login_do()}$.get("components/_auth_login.html",function(e){$("body").append(e),$("#auth_login_modal").on("show.bs.modal",function(){auth.input_validation(),setTimeout(function(){$(".auth_form input").trigger("input")},500),$("#auth_login input").off("keyup"),$("#auth_login input").keyup(function(e){var t=!0;let l=document.getElementById("auth_login").getElementsByTagName("input");(l=[...l]).forEach(o=>{o.checkValidity()||(t=!1)}),console.log(`e.which === 13: ${13===e.which}`),console.log(`allFldsValid: ${t}`),13===e.which&&t&&(console.log("enter"),o())}),$("#auth_login_do").off("click"),$("#auth_login_do").on("click",function(){o()})}),$("#auth_login_modal").on("shown.bs.modal",function(){""===$.trim($("#auth_login").find("input[type=email]").val())&&""===$.trim($("#auth_login").find("input[type=password]").val())&&$("#auth_login_email").focus()}),$("#auth_login_modal").on("hidden.bs.modal",function(){$("#auth_login_modal").modal("dispose"),$("#auth_login_modal").remove()}),$("#auth_login_modal").modal({backdrop:"static"}),$("#auth_login_modal").modal("show")})},auth_do:o=>{var e;switch(console.log(t),o){case"acct_main_mgmt":e="acct_main_mgmt";break;case"auth_login":e="auth_login"}var t={auth_task:e};$.each($("#"+o+" input"),function(o,e){var l=$(e).attr("data-authfld"),a=$(e).val();t[l]=a}),console.log(t);var l=JSON.stringify(t);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:l,success:function(){window.location.reload(!0)},error:function(o,e,t){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(t),void 0!==o.responseJSON){let e=o.responseJSON.statusCode;l=e+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message,401===e&&console.log("Communicate the specific authentication problem to user")}else l=o.responseText;console.error("Error:\n"+l)},complete:function(){console.log("complete event")}})},pw_set_do:o=>{var e={auth_task:"auth_pw_chg"};e.auth_pw=o;var t=JSON.stringify(e);return $.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:t,success:function(o,e,t){console.log("success event"),console.log("resp: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("jqXhr: "),console.log(t)},error:function(o,e,t){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(t),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;console.error("Error:\n"+l)},complete:function(){console.log("complete event")}})},login_do:()=>{var o={auth_task:"auth_login"};$.each($("#auth_login input"),function(e,t){var l=$(t).attr("data-authfld"),a=$(t).val();o[l]=a});var e=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:e,success:function(o){console.log("success event"),auth.login_success(o)},error:function(o,e,t){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(t),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;console.error("Error:\n"+l),$("#auth_login_actions_msgs").prepend('<span class="msg_loginStatus msg-warning">Please check that the login info is correct</span>'),$("#auth_login_actions_msgs").show(),$("#auth_login_do").prop("disabled",!1),$("#auth_login input").prop("disabled",!1),$("#auth_login_modal .modal-body .overlay").remove()},complete:function(){console.log("complete event")}})},login_success:()=>{if(0===$(".valChg").length)location.reload();else{var o=$(".save:disabled");$.each(o,function(){$(this).is(":visible")&&$(this).prop("disabled",!1)}),$("#auth_login_modal").modal("hide")}},logout_init:()=>{$(".auth-loginout").text("Log out"),$(".auth-loginout").removeClass("disabled"),$(".auth-loginout").removeAttr("tabindex"),$(".auth-loginout").removeAttr("aria-disabled"),$(".auth-loginout").click(function(){auth.logout_do()})},logout_do:()=>{$.ajax({url:"/.netlify/functions/at_auth?auth_task=logout",type:"GET",success:function(o){auth.logout_success()},error:function(o,e,t){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(t),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;console.error("Error:\n"+l)},complete:function(){console.log("complete event")}})},logout_success:()=>{location.reload()}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
