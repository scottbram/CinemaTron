var auth="object"==typeof auth?auth:{};auth={sesh_check:()=>new Promise((o,e)=>{$.ajax({url:"/.netlify/functions/at_auth",dataType:"json"}).done(function(e){e.length>0&&o(e)}).fail(function(o,l,n){e(o,l,n)})}),input_validation:()=>{$("body").on("input change",".auth_form input",function(){var o=$(this)[0],e=$(this).val(),l=$(this).closest("form"),n=!1,t=!1;if(o.setCustomValidity(""),"email"===$(this).attr("type")){let{valid_eml:l}=utils.validate_email(e);l?o.setCustomValidity(""):o.setCustomValidity("Please check that the email is correct.")}if("password"===$(this).attr("type")){let{valid_pw:n,valid_pw_length:t,valid_pw_length_msg:s,valid_ltrCases:a,valid_ltrCases_msg:i,valid_pw_spcChar:r,valid_pw_spcChar_msg:d}=utils.validate_pw(e);n&&o.setCustomValidity("");let c="";t?$(l).find(".validHelp_minLength").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_minLength").removeClass("valid").addClass("invalid"),c+=s),a?$(l).find(".validHelp_ltrCases").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_ltrCases").removeClass("valid").addClass("invalid"),c+=i),r?$(l).find(".validHelp_spcChar").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_spcChar").removeClass("valid").addClass("invalid"),c+=d),o.setCustomValidity(c)}o.checkValidity()||(console.log("Fld invalid. fld_el.validationMessage: "),console.log(o.validationMessage)),""!==$.trim(l.find("input[type=email]").val())&&""!==$.trim(l.find("input[type=password]").val())&&(n=!0),l.find("input[type=email]").is(":valid")&&l.find("input[type=password]").is(":valid")&&(t=!0),n&&t?(!0,$("#auth_login_do").prop("disabled",!1)):(!1,$("#auth_login_do").prop("disabled",!0))})},show_login_modal:()=>{function o(){$("#auth_login_actions_msgs").empty(),$("#auth_login_do").prop("disabled",!0),$("#auth_login input").prop("disabled",!0),$("#auth_login_modal .modal-body").prepend('<div class="overlay overlay-enlighten" aria-hidden="true"></div>'),$("#auth_login_modal .overlay").prepend('<span class="spinner spinner-border spinner-border-md" role="status" aria-hidden="true"></span>'),auth.login_do()}$.get("components/_auth_login.html",function(e){$("body").append(e),$("#auth_login_modal").on("show.bs.modal",function(){auth.input_validation(),setTimeout(function(){$(".auth_form input").trigger("change")},500),$("#auth_login input").off("keypress"),$("#auth_login input").keypress(function(e){13!==e.which||$("#auth_login_do").prop("disabled")||o()}),$("#auth_login_do").off("click"),$("#auth_login_do").on("click",function(e){o()})}),$("#auth_login_modal").on("shown.bs.modal",function(){""===$.trim($("#auth_login").find("input[type=email]").val())&&""===$.trim($("#auth_login").find("input[type=password]").val())&&$("#auth_login_email").focus()}),$("#auth_login_modal").on("hidden.bs.modal",function(){$("#auth_login_modal").modal("dispose"),$("#auth_login_modal").remove()}),$("#auth_login_modal").modal({backdrop:"static"}),$("#auth_login_modal").modal("show")})},auth_do:o=>{var e;switch(console.log(l),o){case"auth_pw_set":e="auth_pw_set";break;case"auth_login":e="auth_login"}var l={auth_task:e};$.each($("#"+o+" input"),function(o,e){var n=$(e).attr("data-authfld"),t=$(e).val();l[n]=t}),console.log(l);var n=JSON.stringify(l);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:n,success:function(){window.location.reload(!0)},error:function(o,e,l){var n;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(l),void 0!==o.responseJSON){let e=o.responseJSON.statusCode;n=e+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message,401===e&&console.log("Communicate the specific authentication problem to user")}else n=o.responseText;console.error("Error:\n"+n)},complete:function(){console.log("complete event")}})},pw_set_do:()=>{var o={task:"pw_set"};$.each($("#auth_pw_set input"),function(e,l){var n=$(l).attr("id"),t=$(l).val();o[n]=t}),console.log(o);var e=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:e,success:function(o,e,l){console.log("success event"),console.log("resp: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("jqXhr: "),console.log(l)},error:function(o,e,l){var n;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(l),void 0!==o.responseJSON){n=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else n=o.responseText;console.error("Error:\n"+n)},complete:function(){console.log("complete event")}})},login_do:()=>{var o={auth_task:"auth_login"};$.each($("#auth_login input"),function(e,l){var n=$(l).attr("data-authfld"),t=$(l).val();o[n]=t}),console.log("req_obj: "),console.log(o);var e=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:e,success:function(o){auth.login_success(o)},error:function(o,e,l){var n;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(l),void 0!==o.responseJSON){n=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else n=o.responseText;console.error("Error:\n"+n),$("#auth_login_actions_msgs").prepend('<small class="msg_loginStatus msg-warning">Please check that the login info is correct</small>'),$("#auth_login_do").prop("disabled",!1),$("#auth_login input").prop("disabled",!1),$("#auth_login_modal .modal-body .overlay").remove()},complete:function(){console.log("complete event")}})},login_success:()=>{if(0===$(".valChg").length)location.reload();else{var o=$(".save:disabled");$.each(o,function(){$(this).is(":visible")&&$(this).prop("disabled",!1)}),$("#auth_login_modal").modal("hide")}},logout_do:()=>{$.ajax({url:"/.netlify/functions/at_auth?auth_task=logout",type:"GET",success:function(o){auth.logout_success()},error:function(o,e,l){var n;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(l),void 0!==o.responseJSON){n=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else n=o.responseText;console.error("Error:\n"+n)},complete:function(){console.log("complete event")}})},logout_success:()=>{location.reload()}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
