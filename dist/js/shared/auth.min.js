var auth="object"==typeof auth?auth:{};(auth={init:()=>{auth.sesh_check()},sesh_check:()=>new Promise((o,e)=>{$.ajax({url:"/.netlify/functions/at_auth",dataType:"json"}).done(function(e,t,l){e.length>0&&o(e)}).fail(function(o,t,l){e(o,t,l)})}),input_validation:()=>{$("body").on("input change",".auth_form input",function(o){var e=$(this)[0],t=$(this).val(),l=$(this).closest("form"),s=(l.attr("id"),!1),n=!1;if(e.setCustomValidity(""),"email"===$(this).attr("type")){let{valid_eml:o}=utils.validate_email(t);o?e.setCustomValidity(""):e.setCustomValidity("Gonna need a valid email there, chief.")}if("password"===$(this).attr("type")){let{valid_pw:o,valid_pw_length:s,valid_pw_length_msg:n,valid_ltrCases:a,valid_ltrCases_msg:i,valid_pw_spcChar:r,valid_pw_spcChar_msg:c}=utils.validate_pw(t);o&&e.setCustomValidity("");let d="";s?$(l).find(".validHelp_minLength").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_minLength").removeClass("valid").addClass("invalid"),d+=n),a?$(l).find(".validHelp_ltrCases").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_ltrCases").removeClass("valid").addClass("invalid"),d+=i),r?$(l).find(".validHelp_spcChar").removeClass("invalid").addClass("valid"):($(l).find(".validHelp_spcChar").removeClass("valid").addClass("invalid"),d+=c),e.setCustomValidity(d)}e.checkValidity()||(console.log("Fld invalid. fld_el.validationMessage: "),console.log(e.validationMessage)),""!==$.trim(l.find("input[type=email]").val())&&""!==$.trim(l.find("input[type=password]").val())&&(s=!0),l.find("input[type=email]").is(":valid")&&l.find("input[type=password]").is(":valid")&&(n=!0),s&&n?(!0,$("#auth_login_do").attr("disabled",!1)):(!1,$("#auth_login_do").attr("disabled",!0))})},show_login_modal:()=>{$.get("components/_auth_login.html",function(o){$("body").append(o),$("#auth_login_modal").on("show.bs.modal",function(o){auth.input_validation(),$("#auth_login input").off("keypress"),$("#auth_login input").keypress(function(o){13===o.which&&($("#auth_login_do").attr("disabled",!0),auth.login_do())}),$("#auth_login_do").off("click"),$("#auth_login_do").on("click",function(o){o.preventDefault(),$("#auth_login_do").attr("disabled",!0),auth.login_do()})}),$("#auth_login_modal").modal("show")})},auth_do:o=>{var e;switch(o){case"auth_pw_set":e="auth_pw_set";break;case"auth_login":e="auth_login"}var t={auth_task:e};$.each($("#"+o+" input"),function(o,e){var l=$(e).attr("data-authfld"),s=$(e).val();t[l]=s}),console.log(t);var l=JSON.stringify(t);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:l,success:function(o,e,t){console.log("success event"),console.log("resp: "),console.log(o),window.location.reload(!0)},error:function(o,e,t){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(t),void 0!==o.responseJSON){let e=o.responseJSON.statusCode;l=e+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message,401===e&&console.log("Communicate the specific authentication problem to user")}else l=o.responseText;console.error("Error:\n"+l)},complete:function(){console.log("complete event")}})},pw_set_do:()=>{var o={task:"pw_set"};$.each($("#auth_pw_set input"),function(e,t){var l=$(t).attr("id"),s=$(t).val();o[l]=s}),console.log(o);var e=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:e,success:function(o,e,t){console.log("success event"),console.log("resp: "),console.log(o)},error:function(o,e,t){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(t),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;alert("Error:\n"+l)},complete:function(){console.log("complete event")}})},login_do:()=>{console.log("login_do");var o={auth_task:"auth_login"};$.each($("#auth_login input"),function(e,t){var l=$(t).attr("data-authfld"),s=$(t).val();o[l]=s}),console.log("req_obj: "),console.log(o);var e=JSON.stringify(o);$.ajax({url:"/.netlify/functions/at_auth",type:"POST",contentType:"application/json",data:e,success:function(o,e,t){console.log("success event"),console.log("resp: "),console.log(o),auth.login_success(o)},error:function(o,e,t){var l;if(console.log("error event"),console.log("jqXHR: "),console.log(o),console.log("textStatus: "),console.log(e),console.log("errorThrown: "),console.log(t),void 0!==o.responseJSON){l=o.responseJSON.statusCode+"\n"+o.responseJSON.error+"\n"+o.responseJSON.message}else l=o.responseText;alert("Error:\n"+l)},complete:function(){console.log("complete event")}})},login_success:o=>{location.reload()}}).init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
