var account="object"==typeof account?account:{};(account={init:()=>{auth.sesh_check().then(t=>{let a=t[0].fields;account.sesh_success(a)}).catch(()=>{account.sesh_fail()})},sesh_success:t=>{auth.logout_init(),account.load_acct_main(t)},sesh_fail:()=>{$("#acct_main .main-content .status-container").alert("close");$("#acct_main .main-content").prepend('<div class="status-container alert alert-warning fade show" role="alert"><span class="status-msg"><a id="log_in_prompt" href="#">Log in to edit</a></span></div>'),auth.login_modal_init()},load_acct_main:t=>{$("#acct_main_mgmt").attr("data-atrecid",t.uid),$("#acct_main_mgmt_dispName").val(t.display_name),$("#acct_main_mgmt_email").val(t.email),window.setTimeout(function(){account.ready()},200)},save_details:()=>{let t={ID:document.getElementById("acct_main_mgmt").getAttribute("data-atrecid")};var a={};let s=document.getElementsByClassName("acct-details");(s=[...s]).forEach(t=>{let s=t.getAttribute("data-atfld"),e=t.value;a[s]=e}),t.fields=a;var e=JSON.stringify(t);return console.log("save_details: "),console.log(e),new Promise(function(t,a){$.ajax({url:"/.netlify/functions/at_update_acct",type:"PATCH",contentType:"application/json",data:e,success:function(){t()},error:function(t,s,e){var c;if(console.error("error event"),console.log("jqXHR: "),console.log(t),console.log("textStatus: "),console.log(s),console.log("errorThrown: "),console.log(e),void 0!==t.responseJSON){c=t.responseJSON.statusCode+"\n"+t.responseJSON.error+"\n"+t.responseJSON.message}else c=t.responseText;a(),console.error("Error:\n"+c),401===t.status&&auth.show_login_modal()}})})},save_pw:()=>{var t=$("#acct_main_mgmt_pw").val();if(""===t)return"nopw";return new Promise(function(a,s){(async()=>{const a=await auth.pw_set_do(t);return await a})().then(()=>{$("#acct_main_mgmt_pw").val("").attr("type","password"),$("#acct_main_mgmt_pw_toggle_vis").prop("checked",!1),a()}).catch(t=>{console.error("Password save error"),console.log(t),s()})})},ready:()=>{$("#acct_main_mgmt").on("input change","input",function(){$(this).addClass("valChg"),$("#acct_save_do").prop("disabled",!1)}),$("#acct_main_mgmt_pw_toggle_vis").on("change",function(){$(this).prop("checked")?$("#acct_main_mgmt_pw").attr("type","text"):$("#acct_main_mgmt_pw").attr("type","password")}),$("#acct_save_do").click(function(){$(this).prop("disabled",!0),account.status_msg("saving");(async()=>{await account.save_pw(),await account.save_details()})().then(()=>{account.status_msg("save_success")}).catch(t=>{console.log(t)})}),$("#acct_main .main-content .status-container").alert("close"),$("#acct_main_mgmt").removeAttr("style"),$("#acct_main .main-content").css("overflow","auto"),auth.input_validation()},status_msg:t=>{switch(t){case"saving":$(".actions-msgs .msg_saveStatus").remove(),$(".actions-msgs").prepend('<small class="msg_saveStatus msg_chgsSaved msg-info">Saving...</small>');break;case"save_success":$("#acct_main_mgmt input").removeClass("valChg"),$("#acct_save_do").blur(),$(".actions-msgs .msg_saveStatus").remove(),$(".actions-msgs").prepend('<small class="msg_saveStatus msg_chgsSaved msg-success">All changes saved.</small>'),window.setTimeout(function(){$(".actions-msgs .msg_chgsSaved").fadeOut("slow",function(){$(this).remove()})},2e3)}}}).init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
